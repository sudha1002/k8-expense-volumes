kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx
  namespace: expense
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log;
    pid /run/nginx.pid; 
    # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
    include /usr/share/nginx/modules/*.conf;

    events {
        worker_connections 1024;
    }

    http {
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile            on;
        tcp_nopush          on;
        tcp_nodelay         on;
        keepalive_timeout   65;
        types_hash_max_size 2048;

        include             /etc/nginx/mime.types;
        default_type        application/octet-stream;

        # Load modular configuration files from the /etc/nginx/conf.d directory.
        # See http://nginx.org/en/docs/ngx_core_module.html#include
        # for more information.
        include /etc/nginx/conf.d/*.conf;

        server {
            listen       8080 default_server;
            listen       [::]:8080 default_server;
            server_name  _;
            root         /usr/share/nginx/html;

           # Load configuration files for the default server block.
           include /etc/nginx/default.d/*.conf;
           
           location  /api/ {
        	     proxy_pass http://backend:8080/;
    	     } 
           
           error_page 404 /404.html;
               location = /40x.html {
           }

           error_page 500 502 503 504 /50x.html;
               location = /50x.html {
           }
        }
    }
    
---  
kind: Deployment
apiVersion: apps/v1
metadata:
  name: frontend
  namespace: expense
  labels:
    app: frontend
    tier: frontend
    project: expense
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
      tier: frontend
      project: expense
  template:
    metadata:
      labels:
        app: frontend
        tier: frontend
        project: expense
    spec:
      volumes:
      - name: nginx
        configMap:
          name: nginx
          items:
            - key: nginx.conf
              path: nginx.conf  
      containers:
      - name: frontend
        image: sudhanaga1002/frontend:1.2.0
        resources:
          requests:
            # soft limit
            memory: "68Mi"
            cpu: "100m"
          limits:
            # hard limit
            memory: "128Mi"
            cpu: "150m"
        ports:
        - containerPort: 80
        volumeMounts:
            - name: nginx
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
            
---
kind: Service
apiVersion: v1
metadata:
  name: frontend
  namespace: expense
spec:
  type: LoadBalancer
  selector:
    app: frontend
    tier: frontend
    project: expense
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080                        
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend
  namespace: expense
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 5